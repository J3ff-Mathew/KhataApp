{"version":3,"sources":["component/Budget.js","component/Dashboard.js"],"names":["Budget","arr","JSON","parse","localStorage","getItem","expenseTitle","axios","create","baseURL","useRef","expenseAmount","budgetAmount","useState","index","update","prevAmount","state","updateState","budgetData","moneyData","data","setData","budget","budgetList","updatebudgetList","Container","fluid","className","Toolbar","sx","fontSize","display","justifyContent","Row","Col","TextField","type","margin","width","id","inputRef","variant","style","onClick","current","value","parseFloat","pendingAmount","setItem","stringify","expensetitle","expenseamount","console","log","UpdateBudget","title","amount","alert","xs","color","textAlign","TableContainer","component","Paper","Table","minWidth","TableHead","TableRow","TableCell","TableBody","map","element","Button","startIcon","RenderBudget","window","confirm","splice","DeleteBudget","colSpan","Dashboard","undefined","Navb","to","Component"],"mappings":"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","file":"static/js/10.dbd1bac5.chunk.js","sourcesContent":["\r\nimport React, { useRef, useState, useEffect } from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport ReactHtmlParser from 'html-react-parser';\r\nimport { TextField, Table, TableBody, TableHead, Paper, TableRow, TableContainer, TableCell, Select, MenuItem, InputLabel, Button } from '@mui/material';\r\nimport { Toolbar } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { margin } from '@mui/system';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport UpdateIcon from '@mui/icons-material/Update';\r\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\r\nimport PaymentIcon from '@mui/icons-material/Payment';\r\nimport AccountBalanceWalletOutlinedIcon from '@mui/icons-material/AccountBalanceWalletOutlined';\r\n\r\nexport default function Budget() {\r\n    let arr = JSON.parse(localStorage.getItem('credentials'));\r\n    const cred = axios.create({ baseURL: 'http://localhost:3001/u' });\r\n    let expenseTitle = useRef(null);\r\n    let expenseAmount = useRef(null);\r\n    let budgetAmount = useRef(null);\r\n    const [state, updateState] = useState({ index: null, update: 0, prevAmount: 0 });\r\n    const [data, setData] = useState({ ...arr[1].budgetData.moneyData })\r\n    const [budgetList, updatebudgetList] = useState(arr[1].budgetData.budget);\r\n    function addExpense() {\r\n        if (expenseAmount.current.value && expenseTitle.current.value) {\r\n            if (parseFloat(expenseAmount.current.value) <= parseFloat(data.pendingAmount)) {\r\n                updatebudgetList(\r\n                    [...budgetList, { title: expenseTitle.current.value, amount: expenseAmount.current.value }]\r\n                );\r\n                setData({ ...data, pendingAmount: parseFloat(data.pendingAmount) - parseFloat(expenseAmount.current.value), expenseAmount: parseFloat(data.expenseAmount) + parseFloat(expenseAmount.current.value) })\r\n                arr[1].budgetData.budget = [...budgetList, { title: expenseTitle.current.value, amount: expenseAmount.current.value }];\r\n                arr[1].budgetData.moneyData = { ...data, pendingAmount: parseFloat(data.pendingAmount) - parseFloat(expenseAmount.current.value), expenseAmount: parseFloat(data.expenseAmount) + parseFloat(expenseAmount.current.value) };\r\n                localStorage.setItem('credentials', JSON.stringify(arr));\r\n                expenseTitle.current.value = '';\r\n                expenseAmount.current.value = '';\r\n            }\r\n            else {\r\n                alert(`Expense Out of Budget`);\r\n                expenseTitle.current.value = '';\r\n                expenseAmount.current.value = '';\r\n            }\r\n        }\r\n        else {\r\n            alert(\"Both the Field for expense is necessary\")\r\n        }\r\n    }\r\n\r\n    function DeleteBudget(index) {\r\n        // console.log(budgetList[index].amount)\r\n        if (window.confirm('Are You Sure You want to delete the Expense?')) {\r\n            setData({ ...data, pendingAmount: parseFloat(data.pendingAmount) + parseFloat(budgetList[index].amount), expenseAmount: parseFloat(data.expenseAmount) - parseFloat(budgetList[index].amount) });\r\n            arr[1].budgetData.moneyData = { ...data, pendingAmount: parseFloat(data.pendingAmount) + parseFloat(budgetList[index].amount), expenseAmount: parseFloat(data.expenseAmount) - parseFloat(budgetList[index].amount) };\r\n            budgetList.splice(index, 1);\r\n            updatebudgetList(\r\n                [...budgetList]\r\n            );\r\n\r\n            arr[1].budgetData.budget = budgetList;\r\n            localStorage.setItem('credentials', JSON.stringify(arr));\r\n        }\r\n    }\r\n    function RenderBudget(index) {\r\n        let pos = index;\r\n        updateState({\r\n            update: 1,\r\n            index: pos,\r\n            prevAmount: budgetList[index].amount\r\n        });\r\n        expenseTitle.current.value = budgetList[index].title;\r\n        expenseAmount.current.value = budgetList[index].amount;\r\n\r\n    }\r\n    function UpdateBudget() {\r\n        if (expenseAmount.current.value && expenseTitle.current.value) {\r\n            const expensetitle = expenseTitle.current.value;\r\n            const expenseamount = expenseAmount.current.value;\r\n            budgetList[state.index] = { \"title\": expensetitle, \"amount\": expenseamount };\r\n            console.log(state.prevAmount);\r\n            setData({ ...data, pendingAmount: parseFloat(data.pendingAmount) + parseFloat(state.prevAmount) - parseFloat(expenseAmount.current.value), expenseAmount: parseFloat(data.expenseAmount) - parseFloat(state.prevAmount) + parseFloat(expenseAmount.current.value) })\r\n\r\n            updatebudgetList([...budgetList]);\r\n\r\n            arr[1].budgetData.moneyData = { ...data, pendingAmount: parseFloat(data.pendingAmount) + parseFloat(state.prevAmount) - parseFloat(expenseAmount.current.value), expenseAmount: parseFloat(data.expenseAmount) - parseFloat(state.prevAmount) + parseFloat(expenseAmount.current.value) };\r\n            arr[1].budgetData.budget = budgetList;\r\n\r\n            localStorage.setItem('credentials', JSON.stringify(arr));\r\n            updateState({\r\n                update: 0,\r\n                index: null,\r\n                prevAmount: 0\r\n            });\r\n\r\n\r\n            expenseTitle.current.value = '';\r\n            expenseAmount.current.value = '';\r\n        }\r\n    }\r\n    function addBudget() {\r\n        if (budgetAmount.current.value) {\r\n            setData({ ...data, budgetAmount: parseFloat(data.budgetAmount) + parseFloat(budgetAmount.current.value), pendingAmount: parseFloat(data.pendingAmount) + parseFloat(budgetAmount.current.value) });\r\n            arr[1].budgetData.moneyData = { ...data, budgetAmount: parseFloat(data.budgetAmount) + parseFloat(budgetAmount.current.value), pendingAmount: parseFloat(data.pendingAmount) + parseFloat(budgetAmount.current.value) };\r\n            localStorage.setItem('credentials', JSON.stringify(arr));\r\n            budgetAmount.current.value = '';\r\n        }\r\n    }\r\n    return (\r\n        <Container fluid>\r\n            <div className='text-center' >\r\n                <Toolbar sx={{ fontSize: '2rem', display: 'flex', justifyContent: 'center' }}  >BUDGET APP</Toolbar>\r\n            </div>\r\n            <Row >\r\n                <Col>\r\n                    <Container>\r\n                        <Row className=' mb-5 border border-success flex-flow-column'>\r\n                            <h4 className='text-success'>Add Budget</h4>\r\n                            <div>Enter Your Budget Amount</div>\r\n                            <TextField type='number' sx={{ margin: '0.8rem 0.3rem', width: '40rem' }} id=\"standard-basic\" inputRef={budgetAmount} variant=\"outlined\" />\r\n                            <button style={{ margin: '1rem 0.8rem ', width: '40rem' }} className=' btn btn-success' onClick={() => addBudget()}> Add Budget </button>\r\n                        </Row>\r\n                        <Row className=' mt-5 border border-danger flex-flow-column'>\r\n                            <h4 className='text-danger'>Add Expense</h4>\r\n                            <div>Enter Your Expense Title</div>\r\n                            <TextField sx={{ margin: '0.8rem 0.3rem', width: '40rem' }} id=\"standard-basic\" inputRef={expenseTitle} variant=\"outlined\" />\r\n                            <div>Enter Your Expense Amount</div>\r\n                            <TextField type='number' sx={{ margin: '0.8rem 0.3rem', width: '40rem' }} id=\"standard-basic\" inputRef={expenseAmount} variant=\"outlined\" />\r\n                            {state.update === 1 ? <button style={{ margin: '1rem 0.8rem ', width: '40rem' }} className=' btn btn-danger' onClick={() => UpdateBudget()}>  Update Expense</button> : <button style={{ margin: '1rem 0.8rem ', width: '40rem' }} className=' btn btn-danger' onClick={() => addExpense()}> Add Expense </button>}\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n                <Col>\r\n                    <div>\r\n                        <Row>\r\n                            <Col xs={4}>\r\n                                <AttachMoneyIcon color=\"success\" sx={{ fontSize: '7rem', textAlign: 'center' }} />\r\n                                <div className='text-success ' style={{ fontSize: '2.5rem' }}>\r\n                                    {data.budgetAmount}\r\n                                </div>\r\n\r\n                            </Col>\r\n                            <Col>\r\n                                <PaymentIcon color=\"error\" sx={{ fontSize: '7rem', textAlign: 'center' }} />\r\n                                <div className='text-danger ' style={{ fontSize: '2.5rem' }}>\r\n                                    {data.expenseAmount}\r\n                                </div>\r\n                            </Col>\r\n                            <Col>\r\n                                <AccountBalanceWalletOutlinedIcon color=\"success\" sx={{ fontSize: '7rem', textAlign: 'center' }} />\r\n                                <div className='text-success ' style={{ fontSize: '2.5rem' }}>\r\n                                    {data.pendingAmount}\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <h3 className='text-center'>Expense list</h3>\r\n                            <TableContainer component={Paper}>\r\n                                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Sr.No</TableCell>\r\n                                            <TableCell>Title</TableCell>\r\n                                            <TableCell >Amount</TableCell>\r\n                                            <TableCell>Action</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {budgetList != null ?\r\n                                            budgetList.map((element, index) =>\r\n                                                <TableRow>\r\n                                                    <TableCell>{index + 1}</TableCell>\r\n                                                    <TableCell> {element.title}</TableCell>\r\n                                                    <TableCell>{element.amount}</TableCell>\r\n\r\n                                                    <TableCell><Button variant=\"outlined\" color=\"success\" startIcon={<UpdateIcon />} onClick={() => RenderBudget(index)}>\r\n                                                        Update Expense\r\n                                                    </Button> &nbsp; <Button variant=\"outlined\" color=\"error\" startIcon={<DeleteIcon />} onClick={() => DeleteBudget(index)}>\r\n                                                            Delete\r\n                                                        </Button> </TableCell>\r\n\r\n                                                </TableRow>\r\n                                            )\r\n                                            : <TableRow> <TableCell colSpan='4'>\"No Tasks Available\"</TableCell></TableRow>}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Row>\r\n                    </div>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Navb from './Navb'\r\nimport Todo from './Todo'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Page from './Page'\r\nimport Budget from './Budget'\r\n\r\nexport class Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {localStorage.getItem('credentials') != undefined ?\r\n                    <>\r\n                        <Navb />\r\n                        <Budget />\r\n                    </>\r\n                    :\r\n                    <Redirect to='/' />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard\r\n"],"sourceRoot":""}